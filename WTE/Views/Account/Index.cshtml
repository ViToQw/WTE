@{
    ViewData["Title"] = "Аккаунт";
}

<div class="overlap" id="vueapp">
    <div class="registration_card">
        <div class="regisatrtion_white">
            <div>
                <h1 class="autorization_text">Авторизация</h1>
            </div>

            <div class="autorization_div">
                <input class="autorization_input_text" placeholder="Введите телефон" maxlength="20" v-model="phone_number" type="tel" v-on:keydown="preventNonNumeric"  />
                <span v-if="showErrors && !phone_number" class="error">Введите телефон</span>
                <span v-if="showErrors && userNotFoundError" class="error">Пользователь с указанным телефоном не найден</span>
            </div>

            <div class="autorization_div">
                <input type="password" class="autorization_input_text" placeholder="Введите пароль" maxlength="20" v-model="password" id="password-input" name="password" />
                <a href="#" class="password-control" onclick="return show_hide_password(this);"></a>

                <span v-if="showErrors && !password" class="error">Введите пароль</span>
                <span v-if="showErrors && loginError" class="error">Неверный логин или пароль</span>
            </div>

            <div class="autorization_div">
                <button class="logIn" v-on:click="login">Войти <span class="arrow"> >> </span> </button>
            </div>
        </div>

        <div class="registration_black">
            <h1 class="white_text">What To Eat?</h1>
            <div class="description">
                <p>На сайте вы найдете все необходимые инструменты для создания, редактирования и удаления рецептов, а также для организации своего аккаунта.</p>
                <p>Благодаря разнообразным опциям фильтрации по сложности, времени приготовления и другим критериям, вы сможете легко находить нужные рецепты в любой момент времени.</p>
                <button class="registration_button" v-on:click="registration_button">Зарегистрироваться <span class="arrow"> >> </span> </button>
            </div>
        </div>
    </div>
</div>

<style>
    header {
        display: none;
    }
    .error {
        color: red;
        display: block;
        margin-top: 5px;
        font-family:Raleway;
        
    }

    .password {
        width: 300px;
        margin: 15px auto;
        position: relative;
    }

    #password-input {
        line-height: 40px;
        text-indent: 10px;
        margin: 0 0 15px 0;
        font-size: 18px;
    }

    .password-control {
        position: relative;
        top: 4px;
        right: 30px;
        display: inline-block;
        width: 20px;
        height: 20px;
        background: url(https://snipp.ru/demo/495/view.svg) 0 0 no-repeat;
    }

        .password-control.view {
            background: url(https://snipp.ru/demo/495/no-view.svg) 0 0 no-repeat;
        }

</style>
@section Scripts{
    <script>

        function show_hide_password(target) {
            var input = document.getElementById('password-input');
            if (input.getAttribute('type') == 'password') {
                target.classList.add('view');
                input.setAttribute('type', 'text');
            } else {
                target.classList.remove('view');
                input.setAttribute('type', 'password');
            }
            return false;
        }
        const app = Vue.createApp({
            data() {
                return {
                    phone_number: '',
                    password: '',
                    loginError: false,
                    showErrors: false,
                    userNotFoundError: false,
                    passwordError: false,
                    id: ''
                }
            },
            methods: {

              
                preventNonNumeric(event) {
                    const key = event.key;
                    // Разрешить клавиши управления
                    if (key === "Backspace" || key === "Delete" || key === "ArrowLeft" || key === "ArrowRight" || key === "Tab") {
                        return;
                    }
                    // Разрешить только цифры и символы, используемые в телефонных номерах
                    const regex = /[0-9()+\-]/;
                    if (!regex.test(key)) {
                        event.preventDefault();
                    }
                },

                AddIdUser(id) {
                    axios.get(`/account/SetUser?user_id=${id}`)
                        .then(response => {
                            console.log('User ID is set successfully.');
                        })
                        .catch(error => {
                            console.error('There was a problem setting user ID:', error);
                        });
                },

                registration_button() {
                    window.location.href = '/Account/Registration';
                },
                
                login() {
                    // this.showErrors = true;
                    // if (!this.phone_number || !this.password) {
                    //     return;
                    // }
                    // axios.get('http://hnt8.ru:8222/account')
                    //     .then(response => {
                    //         const user = response.data.find(user => user.phone === this.phone_number);
                    //         if (!user) {
                    //             console.error('Пользователь с указанным телефоном не найден');
                    //             this.loginError = true;
                    //             return;
                    //         }
                    //         if (user.password !== this.password) {
                    //             console.error('Неверный пароль');
                    //             this.loginError = true;
                    //             return;
                    //         }
                    //         this.AddIdUser(user.id);
                    //         window.location.href = '/RecipeCards/Index';
                            
                    //     })
                    //     .catch(error => {
                    //         console.error('Ошибка при проверке данных пользователя:', error);
                    //         this.loginError = true;
                    //     });
                    this.showErrors = true;

                    if (!this.phone_number || !this.password) {
                        return;
                    }

                    axios.get('http://hnt8.ru:8222/account')
                        .then(response => {
                            const user = response.data.find(user => user.phone === this.phone_number);

                            if (!user) {
                                this.userNotFoundError = true;
                                this.passwordError = false;
                                this.loginError = false;
                                return;
                            }

                            if (user.password !== this.password) {
                                this.passwordError = true;
                                this.loginError = true;
                                this.userNotFoundError = false;
                                return;
                            }

                            this.userNotFoundError = false;
                            this.passwordError = false;
                            this.AddIdUser(user.id);
                            window.location.href = '/RecipeCards/Index';
                        })
                        .catch(error => {
                            console.error('Ошибка при проверке данных пользователя:', error);
                            this.loginError = true;
                        });
                }
            }
        });
        app.mount("#vueapp");
    </script>
}





