@{
    ViewData["Title"] = "Аккаунт";
}

@* <div class="overlap" id="vueapp">
    <div class="registration_card">
        <div class="regisatrtion_white">
            <div>
                <h1 class="autorization_text">Авторизация</h1>
            </div>
            <div class="autorization_div">
                <input class="autorization_input_text" placeholder="Введите телефон" v-model="phone_number" />
                
            </div>
            <div class="autorization_div">
                <input type="password" class="autorization_input_text" placeholder="Введите пароль" v-model="password" />
               
            </div>
            <div class="autorization_div">
                <button class="logIn" v-on:click="login">Войти <span class="arrow"> >> </span> </button>
            </div>
        </div>

        <div class="registration_black">
            <h1 class="white_text">У вас нет есть аккаунта?</h1>
            <p class="description">
                Если у вас есть аккаунта пройдите авторизацию.
                Тут должен быть какой то текст. Я его придумаю позже
            </p>           
        </div>
    </div>
</div>

<style>
    header {
        display: none;
    }
</style>

@section Scripts{
    <script>
        const app = Vue.createApp({
            data() {
                return {
                    
                    phone_number: '',
                    password: ''
                }
            },
            methods: {
                login() {
                    if (!this.phone_number || !this.password) {
                        console.error('Введите телефон и пароль');
                        return;
                    }
                    axios.get('http://hnt8.ru:8222/account')
                        .then(response => {
                            const user = response.data.find(user => user.phone === this.phone_number);
                            if (!user) {
                                console.error('Пользователь с указанным телефоном не найден');
                                return;
                            }
                            if (user.password !== this.password) {
                                console.error('Неверный пароль');
                                return;
                            }
                            if (user.admin!== false) {
                                window.location.href = '/RecipeCards/Index';
                            } else {
                                console.error('Пользователь не является администратором');
                            }
                        })
                        .catch(error => {
                            console.error('Ошибка при проверке данных пользователя:', error);
                        });
                }
            }
        });

        app.mount("#vueapp");
    </script>
} *@

<div class="overlap" id="vueapp">
    <div class="registration_card">
        <div class="regisatrtion_white">
            <div>
                <h1 class="autorization_text">Авторизация</h1>
            </div>
            <div class="autorization_div">
                <input class="autorization_input_text" placeholder="Введите телефон" v-model="phone_number" />
                <span v-if="showErrors && !phone_number" class="error">Введите телефон</span>
            </div>
            <div class="autorization_div">
                <input type="password" class="autorization_input_text" placeholder="Введите пароль" v-model="password" />
                <span v-if="showErrors && !password" class="error">Введите пароль</span>
                <span v-if="showErrors && loginError" class="error">Неверный логин или пароль</span>
            </div>
            <div class="autorization_div">
                <button class="logIn" v-on:click="login">Войти <span class="arrow"> >> </span> </button>
            </div>
        </div>

        <div class="registration_black">
            <h1 class="white_text">What To Eat?</h1>
            <div class="description">
                <p>На сайте вы найдете все необходимые инструменты для создания, редактирования и удаления рецептов, а также для организации своего аккаунта.</p>
                <p>Благодаря разнообразным опциям фильтрации по сложности, времени приготовления и другим критериям, вы сможете легко находить нужные рецепты в любой момент времени.</p>
                <p>What To Eat? предоставляет возможность создавать собственные фильтры и настраивать их, обеспечивая гибкость и удобство в поиске рецептов.</p>
            </div>
        </div>
    </div>
</div>

<style>
    header {
        display: none;
    }

    

    .error {
        color: red;
        display: block;
        margin-top: 5px;
        font-family:Raleway;
        
    }
</style>

@section Scripts{
    <script>
        const app = Vue.createApp({
            data() {
                return {
                    phone_number: '',
                    password: '',
                    loginError: false,
                    showErrors: false
                }
            },
            methods: {
                login() {
                    this.showErrors = true;
                    if (!this.phone_number || !this.password) {
                        return;
                    }
                    axios.get('http://hnt8.ru:8222/account')
                        .then(response => {
                            const user = response.data.find(user => user.phone === this.phone_number);
                            if (!user) {
                                console.error('Пользователь с указанным телефоном не найден');
                                this.loginError = true;
                                return;
                            }
                            if (user.password !== this.password) {
                                console.error('Неверный пароль');
                                this.loginError = true;
                                return;
                            }
                            if (user.admin !== false) {
                                window.location.href = '/RecipeCards/Index';                                
                            } else {
                                console.error('Пользователь не является администратором');
                                this.loginError = true;
                            }
                        })
                        .catch(error => {
                            console.error('Ошибка при проверке данных пользователя:', error);
                            this.loginError = true;
                        });
                }
            }
        });

        app.mount("#vueapp");
    </script>
}




