@{
    ViewData["Title"] = "Личный Аккаунт";
}
<div id="profileApp">
    <div class="profile">
        <div class="profile_card">
            <div class="profile_white">
                <h1 class="admin_text">{{ userRole === 'admin' ? 'Администратор' : 'Пользователь' }}</h1>
                <img v-bind:src="user.imageUrl" class="profile_image" alt="Аватар" />
              @*   Добавила для ввода фото *@
                <input type="file" v-on:change="handleFileUpload" />
                <button class="save_change_profile" v-on:click="uploadFile">Загрузить фото</button>

                <button class="save_change_profile" v-on:click="saveChanges">Сохранить изменения</button>
            </div>
            <div class="profile_gray">
                <h1 class="white_text_profile">Данные об аккаунте</h1>
                <div class="profile_info_block">
                    <p class="profile_info_change">Имя: </p>
                    <input v-model="user.name" class="input_info" placeholder="Введите имя" />
                </div>
                <div class="profile_info_block">
                    <p class="profile_info_change">Телефон: </p>
                    <input v-model="user.phone" class="input_info" placeholder="Введите телефон" />
                </div>
                <div class="profile_info_block">
                    <p class="profile_info_change">Дата регистрации: </p>
                    <p class="profile_info_change">{{ formatDate(user.createdAt) }}</p>
                </div>
                <div class="profile_info_block" v-if="userRole === 'admin'">
                    <p class="profile_info_change">Пароль: </p>
                    <input v-model="user.password" class="input_info" placeholder="Введите пароль" type="password" />
                </div>
                <button class="button_transponent">Выйти из аккаунта</button>
                <button class="button_transponent">Удалить аккаунт</button>
            </div>
        </div>
    </div>
</div>

<script>
    const userId = @ViewBag.id;
    const profileApp = Vue.createApp({
        el: '#profileApp',
        data() {
            return {
                user: {
                    id: null,
                    name: '',
                    phone: '',
                    createdAt: '',
                    password: '',
                    imageUrl: ''
                },
                userId: userId,
                userRole: '', // Добавляем поле для хранения роли пользователя
                userData: null,
                selectedFile: null //добавила поле для хранения фото
            };
        },
        methods: {


            //Добавила логику для фото
            handleFileUpload(event) {
                this.selectedFile = event.target.files[0];
            },
            uploadFile() {
                const formData = new FormData();
                formData.append('file', this.selectedFile);

                axios.post('/upload', formData)
                    .then(response => {
                        console.log('Файл успешно загружен:', response.data.url);
                        this.user.imageUrl = response.data.url; // Сохранить URL изображения в профиле пользователя
                    })
                    .catch(error => {
                        console.error('Ошибка при загрузке файла:', error);
                    });
            },


            fetchUserData() {
                axios.get('http://hnt8.ru:8222/account')
                    .then(response => {
                        const userData = response.data.find(user => user.id === this.userId);
                        if (userData) {
                            this.user = userData;
                            this.userRole = userData.admin ? 'admin' : 'user'; // Устанавливаем роль пользователя в зависимости от поля admin
                        } else {
                            console.error('Пользователь с указанным userId не найден');
                        }
                    })
                    .catch(error => {
                        console.error('Ошибка при получении данных с API:', error);
                    });
            },
            formatDate(dateString) {
                const date = new Date(dateString);
                const year = date.getFullYear();
                const month = date.getMonth() + 1;
                const day = date.getDate();
                return `${year}-${month < 10 ? '0' + month : month}-${day < 10 ? '0' + day : day}`;
            },
            saveChanges() {
                axios.put(`http://hnt8.ru:8222/account`, this.user)
                    .then(response => {
                        console.log('Данные профиля успешно обновлены:', response.data);
                        alert('Данные профиля успешно изменены');
                        this.fetchUserData();
                    })
                    .catch(error => {
                        console.error('Ошибка при обновлении данных профиля:', error);
                    });
            }

        },
        created() {
            this.fetchUserData();
        },
        mounted() {
        }
    });

    profileApp.mount("#profileApp");
</script>


<style scoped>
    header {
        display: none;
    }

    .admin_text{
        text-decoration: none;
        display: inline-block;
        color: #000000;
        font-family: Raleway;
        font-size: 28px;
        text-align: left;
        margin-left: 60px;
        margin-top: 60px;
        font-weight: bold 300;
        padding-left: 80px;
        padding-bottom: 20px;
    }

    .button_transponent{
        font-family: Raleway;
        font-size: 18px;
        background-color: transparent;
        border: 2px solid #FFFFFF;
        color: #FFFFFF;
        background: #262626;
        opacity: 85%;
        height: 56px;
        display: inline;
        width: 190px;
        text-align: center;
        transition: transform .2s;
        margin-top: 40px;
        margin-left: 112px;
        position: relative;
    }

        .button_transponent:hover {
        transform: scale(1.1);
    }

    #profileApp .profile_info_block {
        display: flex;
        align-items: center; 
        margin-top: 20px;
    }

        #profileApp .profile_info_block .input_info {
            color: #FFFFFF;
            font-family: Raleway;
            font-size: 18px;
            border: none;
            background-color: transparent;
            width: 200px;
            margin-right: 50px;
            margin-top: 30px;
        }

    #profileApp .input_info::after {
            content: "";
            position: absolute;
            left: 0;
            bottom: 0;
            width: 0;
            height: 1px;
            background-color: white;
            transition: width 0.2s ease, left 0.2s ease;
        }

    #profileApp .input_info:focus::after {
            left: 0;
            width: 100%;
        }

    #profileApp .profile {
        height: 900px;
        min-height: 900px;
        background: #F1F1F1;
    }

    .profile_white {
        background-color: #FAFAFA;
        width: 500px;
        height: 510px;
    }

    .profile_gray {
        background: #262626;
        opacity: 85%;
        height: 510px;
        width: 700px;
    }

    .profile_card {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        padding-top: 100px;
    }

    .profile_info_change {
        color: #FFFFFF;
        font-size: 18px;
        font-family: Raleway;
        margin-right: 10px; 
        margin-left: 60px;
        margin-top: 30px;
    }
    .profile_image{
        height: 300px;
        display: block; 
        margin: 0 auto;
    }

    .white_text_profile{
        justify-content: space-between;
        text-decoration: none;
        display: inline-block;
        color: #FFFFFF;
        font-family: Raleway;
        font-size: 28px;
        text-align: left;
        margin-left: 220px;
        margin-top: 60px;
        font-weight: bold 300;
    }
    .save_change_profile{
        font-family: Raleway;
        font-size: 18px;
        background-color: #E07901;
        color: #FFFFFF;
        border: none;
        width: 240px;
        height: 56px;
        position: relative;
        overflow: hidden;
        text-align: center;
        transition: transform .2s;
        margin-left: 123px;
        margin-top: 10px;
    }

        .save_change_profile:hover {
        transform: scale(1.1);
    }

    
</style>



